diff --git a/src/components/DOE/AutoFitPanel.tsx b/src/components/DOE/AutoFitPanel.tsx
--- a/src/components/DOE/AutoFitPanel.tsx
+++ b/src/components/DOE/AutoFitPanel.tsx
@@ -41,17 +41,33 @@
- const fitMemo = useMemo(() => fitModel(samples, derived.effViscosity, fitHistory), [samples, derived.effViscosity, fitHistory]);
+ // Guard: avoid recomputation when last fit equals new fit (epsilon)
+ const last = fitHistory[fitHistory.length - 1];
+ const fitMemo = useMemo(() => {
+   const next = fitModel(samples, derived.effViscosity, fitHistory);
+   if (last && approxEqual(last.params, next.params)) return last;
+   return next;
+ // Only recompute when samples change or effViscosity changes materially
+ }, [samples, derived.effViscosity]);
 
 useEffect(() => {
-  setFitHistory(prev => [...prev, fitMemo]);
+  setFitHistory(prev => {
+    const prevLast = prev[prev.length - 1];
+    if (prevLast && approxEqual(prevLast.params, fitMemo.params)) return prev; // no-op
+    return [...prev, fitMemo];
+  });
 }, [fitMemo]);
 
+function approxEqual(a: Record<string, number>, b: Record<string, number>, eps = 1e-9) {
+  if (!a || !b) return false;
+  const keys = Object.keys(a);
+  if (keys.length !== Object.keys(b).length) return false;
+  for (const k of keys) {
+    if (!(k in b)) return false;
+    if (Math.abs(a[k] - b[k]) > eps) return false;
+  }
+  return true;
+}
+
